training_codes <- training_data[1]
training_data <- training_data[-1]
matrix <- create_matrix(training_data, language="english", removeNumbers=FALSE, stemWords=FALSE, removePunctuation=FALSE, weighting=weightTfIdf)
container <- create_container(matrix,t(training_codes),trainSize=1:400, testSize=401:600,virgin=FALSE)
models <- train_models(container, algorithms=c("MAXENT","SVM","TREE"))
results <- classify_models(container, models)
models <- train_models(container, algorithms=c("MAXENT","TREE"))
models <- train_models(container, algorithms=c("MAXENT","SVM"))
results <- classify_models(container, models)
# VIEW THE RESULTS BY CREATING ANALYTICS
analytics <- create_analytics(container, results)
results
training_codes
results[1]
# VIEW THE RESULTS BY CREATING ANALYTICS
analytics <- create_analytics(container, results)
container
training_codes
data[4]
training_data <- cbind(data[4], cpc1, cpc2, cpc3)
training_data <- data[sample(1:799,size=600,replace=FALSE),]
training_data[1]
training_data[2]
training_data[3]
training_data[4]
training_data <- training_data[sample(1:799,size=600,replace=FALSE),]
training_data[1]
training_data[2]
training_data[3]
training_data[4]
training_data <- cbind(data[4], cpc1, cpc2, cpc3)
training_data <- training_data[sample(1:799,size=600,replace=FALSE),]
training_data[4]
training_data[1]
training_codes <- training_data[1]
training_data <- training_data[-1]
training_codes
matrix <- create_matrix(training_data, language="english", removeNumbers=FALSE, stemWords=FALSE, removePunctuation=FALSE, weighting=weightTfIdf)
# CREATE A container THAT IS SPLIT INTO A TRAINING SET AND A TESTING SET
# WE WILL BE USING t(training_codes) AS THE CODE COLUMN. WE DEFINE A 400
# ARTICLE TRAINING SET AND A 200 ARTICLE TESTING SET.
container <- create_container(matrix,t(training_codes),trainSize=1:400, testSize=401:600,virgin=FALSE)
# THERE ARE TWO METHODS OF TRAINING AND CLASSIFYING DATA.
# ONE WAY IS TO DO THEM AS A BATCH (SEVERAL ALGORITHMS AT ONCE)
models <- train_models(container, algorithms=c("MAXENT","SVM"))
results <- classify_models(container, models)
# VIEW THE RESULTS BY CREATING ANALYTICS
analytics <- create_analytics(container, results)
results <- classify_models(container, models)
analytics <- create_analytics(container, results)
results
analytics <- create_analytics(container, results)
container
testing_codes
container.testing_codes
container[testing_codes]
container$testing_codes
q()
container
q()
patyrs <- read.table("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/pyAnalysisOutput/TAyearTopicDist4R.data",
patyrid <- read.table("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/pyAnalysisOutput/TAyearpidTopicDist4R.data",
           sep=",")
dim(patyrid)
patyrid.lda <- lda(patyrid$V1 ~ patyrid$V2 + patyrid$V3 + patyrid$V4 + patyrid$V5 + patyrid$V6 + patyrid$V7 +patyrid$V8 + patyrid$V9 + patyrid$V10 + patyrid$V11 + patyrid$V12 + patyrid$V13 +patyrid$V14 + patyrid$V15 + patyrid$V16)
library("car")
patyrid.lda <- lda(patyrid$V1 ~ patyrid$V2 + patyrid$V3 + patyrid$V4 + patyrid$V5 + patyrid$V6 + patyrid$V7 +patyrid$V8 + patyrid$V9 + patyrid$V10 + patyrid$V11 + patyrid$V12 + patyrid$V13 +patyrid$V14 + patyrid$V15 + patyrid$V16)
patyrid.lda$scaling[,1]
standardisedconcentrations <- as.data.frame(scale(patyrid[2:16]))
patyrid.lda.values <- predict(patyrid.lda, standardisedconcentrations)
patidplot <- data.frame(ta=patyrid.lda.values[1], l1=patyrid.lda.values$x[,1], l2=patyrid.lda.values$x[,2], l3=patyrid.lda.values$x[,3], yr=patyrid$V17, pid=patyrid$V18)
patidplot
plot(patidplot$l1[patidplot$yr==2005], patidplot$l3[patidplot$yr==2005])
col2005 <- t(as.numeric(patidplot$class[patidplot$yr==2005]))
plot(patidplot$l1[patidplot$yr==2005], patidplot$l3[patidplot$yr==2005])
col2005 <- t(as.numeric(patidplot$class[patidplot$yr==2005]))
text(patidplot$l1[patidplot$yr==2005], patidplot$l3[patidplot$yr==2005], patidplot$pid[patidplot$yr==2005],cex=0.7,pos=4,col=col2005) # add labels
jpeg('lda13-id-2005.jpg')
plot(patidplot$l1[patidplot$yr==2005], patidplot$l3[patidplot$yr==2005],xlim=c(-4,4), ylim=c(-4,4))
col2005 <- t(as.numeric(patidplot$class[patidplot$yr==2005]))
text(patidplot$l1[patidplot$yr==2005], patidplot$l3[patidplot$yr==2005], patidplot$pid[patidplot$yr==2005],cex=0.7,pos=4,col=col2005) # add labels
dev.off()
# Plot 2006
jpeg('lda13-id-2006.jpg')
plot(patidplot$l1[patidplot$yr==2006], patidplot$l3[patidplot$yr==2006],xlim=c(-4,4), ylim=c(-4,4))
col2006 <- t(as.numeric(patidplot$class[patidplot$yr==2006]))
text(patidplot$l1[patidplot$yr==2006], patidplot$l3[patidplot$yr==2006], patidplot$pid[patidplot$yr==2006],cex=0.7,pos=4,col=col2006) # add labels
dev.off()
# Plot 2007
jpeg('lda13-id-2007.jpg')
plot(patidplot$l1[patidplot$yr==2007], patidplot$l3[patidplot$yr==2007],xlim=c(-4,4), ylim=c(-4,4))
col2007 <- t(as.numeric(patidplot$class[patidplot$yr==2007]))
text(patidplot$l1[patidplot$yr==2007], patidplot$l3[patidplot$yr==2007], patidplot$pid[patidplot$yr==2007],cex=0.7,pos=4,col=col2007) # add labels
dev.off()
# Plot 2008
jpeg('lda13-id-2008.jpg')
plot(patidplot$l1[patidplot$yr==2008], patidplot$l3[patidplot$yr==2008],xlim=c(-4,4), ylim=c(-4,4))
col2008 <- t(as.numeric(patidplot$class[patidplot$yr==2008]))
text(patidplot$l1[patidplot$yr==2008], patidplot$l3[patidplot$yr==2008], patidplot$pid[patidplot$yr==2008],cex=0.7,pos=4,col=col2008) # add labels
dev.off()
# Plot 2009
jpeg('lda13-id-2009.jpg')
plot(patidplot$l1[patidplot$yr==2009], patidplot$l3[patidplot$yr==2009],xlim=c(-4,4), ylim=c(-4,4))
col2009 <- t(as.numeric(patidplot$class[patidplot$yr==2009]))
text(patidplot$l1[patidplot$yr==2009], patidplot$l3[patidplot$yr==2009], patidplot$pid[patidplot$yr==2009],cex=0.7,pos=4,col=col2009) # add labels
dev.off()
# Plot 2010
jpeg('lda13-id-2010.jpg')
plot(patidplot$l1[patidplot$yr==2010], patidplot$l3[patidplot$yr==2010],xlim=c(-4,4), ylim=c(-4,4))
col2010 <- t(as.numeric(patidplot$class[patidplot$yr==2010]))
text(patidplot$l1[patidplot$yr==2010], patidplot$l3[patidplot$yr==2010], patidplot$pid[patidplot$yr==2010],cex=0.7,pos=4,col=col2010) # add labels
dev.off()
# Plot 2011
jpeg('lda13-id-2011.jpg')
plot(patidplot$l1[patidplot$yr==2011], patidplot$l3[patidplot$yr==2011],xlim=c(-4,4), ylim=c(-4,4))
col2011 <- t(as.numeric(patidplot$class[patidplot$yr==2011]))
text(patidplot$l1[patidplot$yr==2011], patidplot$l3[patidplot$yr==2011], patidplot$pid[patidplot$yr==2011],cex=0.7,pos=4,col=col2011) # add labels
dev.off()
# Plot 2012
jpeg('lda13-id-2012.jpg')
plot(patidplot$l1[patidplot$yr==2012], patidplot$l3[patidplot$yr==2012],xlim=c(-4,4), ylim=c(-4,4))
col2012 <- t(as.numeric(patidplot$class[patidplot$yr==2012]))
text(patidplot$l1[patidplot$yr==2012], patidplot$l3[patidplot$yr==2012], patidplot$pid[patidplot$yr==2012],cex=0.7,pos=4,col=col2012) # add labels
dev.off()
q()
q()
source("/home/vsubhashini/courses/dm/ee380l-ghosh-project/scripts/ldaPatApps.R")
patapps
dim(patapps)
patapps$V3
source("/home/vsubhashini/courses/dm/ee380l-ghosh-project/scripts/ldaPatApps.R")
confMatrix
source("/home/vsubhashini/courses/dm/ee380l-ghosh-project/scripts/ldaPatApps.R")
confMatrix
cv_tab
source("/home/vsubhashini/courses/dm/ee380l-ghosh-project/scripts/ldaPatApps.R")
cvtab
confMatrix
source("/home/vsubhashini/courses/dm/ee380l-ghosh-project/scripts/ldaPatApps.R")
source("/home/vsubhashini/courses/dm/ee380l-ghosh-project/scripts/ldaPatApps.R")
confMatrix
cvtab
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////5
275/5
289+472+122+21
275/4
904/1067
jpeg('lda-PatApp-scatter12.jpg')                                   
plot(patapps.lda.values$x[,1],patapps.lda.values$x[,2]) # make a scatterplot
text(patapps.lda.values$x[,1],patapps.lda.values$x[,2],patapps$V1,pch=20,pos=4,col=patapps$V1) # add labels
dev.off() 
jpeg('lda-PatApp-scatter12.jpg')                                   
plot(patapps.lda.values$x[,1],patapps.lda.values$x[,2]) # make a scatterplot
text(patapps.lda.values$x[,1],patapps.lda.values$x[,2],patapps$V1,pch=21,pos=4,col=patapps$V1) # add labels
dev.off() 
jpeg('lda-PatApp-scatter12.jpg')                                   
plot(patapps.lda.values$x[,1],patapps.lda.values$x[,2], pch=21, col=patapps$V1) # make a scatterplot
text(patapps.lda.values$x[,1],patapps.lda.values$x[,2],patapps$V1,pch=21,pos=4,col=patapps$V1) # add labels
dev.off() 
jpeg('lda-PatApp-scatter12.jpg')                                   
plot(patapps.lda.values$x[,1],patapps.lda.values$x[,2], pch=19, col=patapps$V1) # make a scatterplot
text(patapps.lda.values$x[,1],patapps.lda.values$x[,2],patapps$V1,pch=19,pos=4,col=patapps$V1) # add labels
dev.off() 
source("/home/vsubhashini/courses/dm/ee380l-ghosh-project/scripts/ldaPatApps.R")
patapps.lda
patplot <- data.frame(ta=patapps.lda.values[1], l1=patapps.lda.values$x[,1], l2=patapps.lda.values$x[,2], l3=patapps.lda.values$x[,3], yr=patapps$V17, fileyr=patapps$V18)
jpeg('lda13-2005.jpg')
col2005 <- t(as.numeric(patplot$class[patplot$yr==2005]))
plot(patplot$l1[patplot$yr==2005], patplot$l3[patplot$yr==2005],xlim=c(-4,4), ylim=c(-4,4), pos=19, col=col2005)
jpeg('lda13-2005.jpg')
col2005 <- t(as.numeric(patplot$class[patplot$yr==2005]))
plot(patplot$l1[patplot$yr==2005], patplot$l3[patplot$yr==2005],xlim=c(-4,4), ylim=c(-4,4), pch=19, col=col2005)
text(patplot$l1[patplot$yr==2005], patplot$l3[patplot$yr==2005], pos=4,col=col2005) # add labels                                      dev.off()
text(patplot$l1[patplot$yr==2005], patplot$l3[patplot$yr==2005], pos=4,col=col2005) # add labels
dev.off()
jpeg('lda13-2005.jpg')
col2005 <- t(as.numeric(patplot$class[patplot$yr==2005]))
plot(patplot$l1[patplot$yr==2005], patplot$l3[patplot$yr==2005],xlim=c(-4,4), ylim=c(-4,4), pch=19, col=col2005)
dev.off()
confMatrix
cvtab
library(MASS)
patapps.qda <- qda(patapps$V1 ~ patapps$V2 + patapps$V3 + patapps$V4 + patapps$V5 + patapps$V6 + patapps$V7 +patapps$V8 + patapps$V9 + patapps$V10 + patapps$V11 + patapps$V12 + patapps$V13 +patapps$V14 + patapps$V15 + patapps$V16)
patapps.qda <- qda(patapps$V1 ~ patapps$V3 + patapps$V4 + patapps$V5 + patapps$V6 + patapps$V7 +patapps$V8 + patapps$V9 + patapps$V10 + patapps$V11 + patapps$V12 + patapps$V13 +patapps$V14 + patapps$V15 + patapps$V16)
standardisedconcentrationsqda <- as.data.frame(scale(patapps[3:16]))
patapps.qda.values <- predict(patapps.qda, standardisedconcentrationsqda)
qdaTab <- table(patapps$V1, patapps.qda$class)
qdaTab <- table(patapps$V1, patapps.qda.values$class)
qdaTab
262+474+128+26
890/1068
289+472+122+21
904/1067
library(e1071)
patapps.svm <- svm(patapps$V1 ~ patapps$V2 + patapps$V3 + patapps$V4 + patapps$V5 + patapps$V6 + patapps$V7 +patapps$V8 + patapps$V9 + patapps$V10 + patapps$V11 + patapps$V12 + patapps$V13 +patapps$V14 + patapps$V15 + patapps$V16)
patapps.svm.values <- predict(patapps.svm, standardisedconcentrations)
svmTab <- table(patapps$V1, patapps.svm.values$class)
svmTab <- table(patapps$V1, patapps.svm.values)
svmTab
table(patapps.svm.values, patapps$V1)
patapps@V1
patapps$V1
patapps.svm <- svm(patapps$V1 ~ patapps$V2 + patapps$V3 + patapps$V4 + patapps$V5 + patapps$V6 + patapps$V7 +patapps$V8 + patapps$V9 + patapps$V10 + patapps$V11 + patapps$V12 + patapps$V13 +patapps$V14 + patapps$V15 + patapps$V16)
standardisedconcentrations <- as.data.frame(scale(patapps[2:16]))
patapps.svm.values <- predict(patapps.svm, standardisedconcentrations)
table(patapps.svm.values, patapps$V1)
patapps.svm.values
patapps.svm
standardconcentrations
standardisedconcentrations
dim(standardisedconcentrations)
dim(svmTab)
dim(qdaTab)
dim(patapps.svm.values)
standardisedconcentrations <- as.data.frame(scale(patapps[2:16]))
patapps.svm <- svm(patapps$V1 ~ patapps$V2 + patapps$V3 + patapps$V4 + patapps$V5 + patapps$V6 + patapps$V7 +patapps$V8 + patapps$V9 + patapps$V10 + patapps$V11 + patapps$V12 + patapps$V13 +patapps$V14 + patapps$V15 + patapps$V16)
patapps.svm.values <- predict(patapps.svm, standardisedconcentrations)
patapps.svm.values
patapps.qda.values
patapps.svm.values
table(patapps.svm.values, patapps$V1)
table(patapps$V1, patapps.svm.values$class)
data(iris)
iris
mysvm <- svm(Species ~ ., iris)
mysvm
patapps.svm
mysvm.pred <- predict(mysvm, iris)
mysvm.pred
patapps.svm2 <- svm(patapps$V1 ~ ., standardisedconcentrations)
patapps.svm2.values <- predict(patapps.svm2, standardisedconcentrations)
patapps.svm2.values
patapps.svm2 <- svm(patapps$V1 ~ ., patapps[1:16])
patapps.svm2.values <- predict(patapps.svm2, standardisedconcentrations)
patapps.svm2.values
patapps.svm2.values <- predict(patapps.svm2, standardisedconcentrations)
patapps.svm2.values
patapps.svm2 <- svm(patapps$V1 ~ ., patapps[2:16])
patapps.svm2.values <- predict(patapps.svm2, patapps[2:16])
patapps.svm2.values
iris
patapps.svm2 <- svm(patapps$V1 ~ patapps[2:16])
q()
library(nnet)
patapps
dim(patapps)
patapps.net <- nnet(patapps$V1 ~ patapps$V2 + patapps$V3 + patapps$V4 + patapps$V5 + patapps$V6 + patapps$V7 +patapps$V8 + patapps$V9 + patapps$V10 + patapps$V11 + patapps$V12 + patapps$V13 +patapps$V14 + patapps$V15 + patapps$V16, size=1)
patapps.net.pred <- predict(patapps.net, patapps[2:16], type="class")
patapps.net.pred <- predict(patapps.net, standardisedconcentrations, type="class")
iris
data <- read.delim("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/pyAnalysisOutput/1kTMdist4R.csv",sep="\t")
dim(data)
data
library(e1071)
patappsvm <- svm(TA ~ ., data)
patappsvm
patappsvm.pred <- predict(patappsvm, data)
patappsvm.pred
table(patappsvm.pred, data$TA)
data <- read.delim("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/pyAnalysisOutput/1kTMdist4R.csv",sep="\t")
patappsvm <- svm(TA ~ ., data)
patappsvm.pred <- predict(patappsvm, data)
patappsvm.pred
svmTab=table(patappsvm.pred, data$TA)
svmTab
488+313+121+14
936/1067
library(nnet)
patappnet <- nnet(TA, ~ ., data, size=1)
data <- read.delim("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/pyAnalysisOutput/1kTMdist4R.csv",sep="\t")
TA
patappnet <- nnet(data$TA, ~ ., data, size=1)
data$TA
data <- read.delim("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/pyAnalysisOutput/1kTMdist4R.csv",sep="\t")
patappnet <- nnet(TA ~ ., data, size=1)
patappnet.pred <- predict(patappnet, data, type="class")
nnetTab <- table(patappnet.pred, data$TA)
nnetTab
12+291+99+466
868/1067
library(klaR)
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], colour=TA, shape=patappsvm.pred, data=data)
library(ggplot2)
install.packages("klaR")
install.packages("ggplot2")
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], colour=TA, shape=patappsvm.pred, data=data)
library(ggplot2)
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], colour=TA, shape=patappsvm.pred, data=data)
patapps.qda.values
LDApredict <- patapps.lda.values$class
TrueTechAr <- TA
data <- read.delim("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/pyAnalysisOutput/1kTMdist4R.csv",sep="\t")
TA
data$TA
TrueTechAr <- data$TA
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], xlim=c(-4,4), ylim=c(-4,4), colour=TrueTechAr, shape=LDApredict, data=data)
dev.off()
data <- read.delim("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/pyAnalysisOutput/1kTMdist4R.csv",sep="\t")
patapplda <- lda(TA ~ ., data, CV=TRUE)
ldaTab <- table(patapplda$class, data$TA)
library(car)
patapplda <- lda(TA ~ ., data, CV=TRUE)
ldaTab <- table(patapplda$class, data$TA)
ldaTab
16+288+120+472
896/1067
patapplda2 <- lda(TA ~ ., data)
ldaTab2 <- table(patapplda2$class, data$TA)
ldaTable <- table(patapplda2$class, data$TA)
patapp2lda <- lda(TA ~ ., data)
ldaTable <- table(patapp2lda$class, data$TA)
mylda <- lda(TA ~ ., data)
mylda.pred <- predict(mylda, data)
table(mylda.pred$class, data$TA)
plot(mylda)
a <- mylda$scaling/2 # 2 is a scaling factor for the lines
for (i in 1:length(data[,1])) {lines(x=c(0,a[i,1]), y=c(0,a[i,2]), lty=3, col="green" )}
a
for (i in 1:length(data[,1])) {lines(x=c(0,a[i,1]), y=c(0,a[i,2]), lty=3, col="green" )}
length(data[,1])
for (i in 1:16)) {lines(x=c(0,a[i,1]), y=c(0,a[i,2]), lty=3, col="green" )}
for (i in 1:16) {lines(x=c(0,a[i,1]), y=c(0,a[i,2]), lty=3, col="green" )}
for (i in 1:15) {lines(x=c(0,a[i,1]), y=c(0,a[i,2]), lty=3, col="green" )}
text(a,dimnames(a)[[1]],cex=0.5,col="blue")
patapplda <- lda(TA ~ ., data, CV=TRUE)                            
ldaTab <- table(patapplda$class, data$TA)                          
TrueTechAr <- TA                                                   
#Misclassified plot
jpeg('misClass-loocv-lda.jpg')                                     
LDApredict <- patapplda$class                                      
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], xlim=c(-4,4), ylim=c(-4,4), colour=TrueTechAr, shape=LDApredict, data=data)
dev.off()
jpeg('misClass-loocv-lda.jpg')
LDApredict <- patapplda$class
qplot(patapplda$x[,1], patapplda$x[,2], xlim=c(-4,4), ylim=c(-4,4), colour=TrueTechAr, shape=LDApredict, data=data)
dev.off()
patapplda
jpeg('misClass-loocv-lda.jpg')
LDApredict <- patapplda$class
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], xlim=c(-4,4), ylim=c(-4,4), colour=TrueTechAr, shape=LDApredict, data=data)
dev.off()
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], xlim=c(-5,5), ylim=c(-5,5), colour=TrueTechAr, shape=LDApredict, data=data)
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], xlim=c(-4.5,4.5), ylim=c(-4.5,4.5), colour=TrueTechAr, shape=LDApredict, data=data)
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], xlim=c(-4,4), ylim=c(-4,4.2), colour=TrueTechAr, shape=LDApredict, data=data)
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], xlim=c(-4,4), ylim=c(-3,4.5), colour=TrueTechAr, shape=LDApredict, data=data)
patappqda <- qda(TA ~ ., data)
patappqda.pred predict(patappqda, data)
patappqda <- qda(TA ~ ., data)
patappqda.pred <- predict(patappqda, data)
data <- read.delim("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/pyAnalysisOutput/1kTMdist4R.csv",sep="\t")
patappqda <- qda(TA ~ ., data)
q()
library(MASS)
standardisedconcentrationsqda <- as.data.frame(scale(patapps[3:16]))
patapps.qda.values <- predict(patapps.qda, standardisedconcentrationsqda)
qdaTab <- table(patapps$V1, patapps.qda.values$class)
qdaTab
jpeg('misClass-qda.jpg')                                           
QDApredict <- patapps.qda.values$class                             
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], xlim=c(-4,4), ylim=c(-3,4.5), colour=TrueTechAr, shape=QDApredict, data=data)
dev.off()
library(ggplot2)
jpeg('misClass-qda.jpg')                                           
QDApredict <- patapps.qda.values$class                             
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], xlim=c(-4,4), ylim=c(-3,4.5), colour=TrueTechAr, shape=QDApredict, data=data)
dev.off()
TrueTechArea <- TA
data <- read.delim("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/pyAnalysisOutput/1kTMdist4R.csv",sep="\t")
TrueTechArea <- TA
TrueTechArea <- data$TA
patappsvm <- svm(TA ~ ., data)
library(e1071)
patappsvm <- svm(TA ~ ., data)
patappsvm.pred <- predict(patappsvm, data)
svmTab=table(patappsvm.pred, data$TA)
svmTab
jpeg('misClass-svm.jpg')
SVMpredict <- patappsvm.pred
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], xlim=c(-4,4), ylim=c(-3,4.5), colour=TrueTechArea, shape=SVMpredict, data=data)
dev.off()
library(nnet)
patappnet <- nnet(TA ~ ., data, size=1)
patappnet.pred <- predict(patappnet, data, type="class")
nnetTab <- table(patappnet.pred, data$TA)
#Misclassification plot:
jpeg('misClass-nnet.jpg')
NNETpredict <- patappnet.pred
qplot(patapps.lda.values$x[,1], patapps.lda.values$x[,2], xlim=c(-4,4), ylim=c(-3,4.5), colour=TrueTechArea, shape=NNETpredict, data=data)
dev.off()
q()
install.packages("lda")
demo(slda)
demo(lda)
library(lda)
demo(slda)
data(cora.documents)
data
cora
cora.documents
q()
library(lda)
corpus <-cora.documents[1:6]
wc <- word.counts(corpus)
wc
corpus
q()
example <- c("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/6882063-sampl", "/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/6882063-sampl")
corpus <- lexicalize(example, lower=TRUE)
library(lda)
corpus <- lexicalize(example, lower=TRUE)
corpus
example <- c("I am the very model of a modern major general",
 "I have a major badge")
example
corpus <-lexicalize(example, lower=TRUE)
corpus
f <- c("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/6882063-sampl", "/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/6882063-sampl")
f
example <- lapply(f, read.dta)
text <- readLines(f)
text <- readLines("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/6882063-sampl")
text
ex <- scan("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/6882063-sampl")
ex <- scan("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/6882063-sampl", what=" ")
ex
example
ex <- scan("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/6882063-sampl", what=character())
ex
library(foreign)
example <- lapply(f, read.dta)
example
eg <- read.table("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/6882063-sampl", what="character")
eg <- scan("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/6882063-sampl", what="\n\n")
eg <- read.table("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/6882063-sampl", sep="\n\n")
source <- DirSource("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/sample/")
library(tm)
source <- DirSource("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/sample/")
MyCorpus <- Corpus(source, readerControl=list(reader=readPlain))
MyCorpus
inspect(MyCirpus)
inspect(MyCorpus)
plaintext <- tm_map(MyCorpus, as.PlainTextDocument)
myCleanCorpus <- tm_map(MyCorpus, removeWords, stopwords("english"))
myCleanCorpus
inspect(myCleanCorpus)
dtm <- DocumentTermMatrix(myCleanCorpus)
dtm
library(topicmodels)
install.package("topicmodels")
install.packages("topicmodels")
dtm
patsldaformat <- dtm2ldaformat(dtm, omit_empty=FALSE)
library(topicmodels)
install.packages("topicmodels")
q()
library(topicmodels)
patsldaformat <- dtm2ldaformat(dtm, omit_empty=FALSE)
annot <- c(1,2)
patsSlda <- slda.em(patsldaformat, 2, vocab, num.e.iterations=10, num.m.iterations=4, alpha=1.0, eta=0.1, annot, params, variance=0.
25, logistic=FALSE, lambda=1.0, regularise=FALSE, method="sLDA", trace=0L)
patsSlda <- slda.em(patsldaformat, 2, vocab, num.e.iterations=10, num.m.iterations=4, alpha=1.0, eta=0.1, annot, params, variance=0.25, logistic=TRUE, lambda=1.0, method="sLDA")
library(lda)
patsSlda <- slda.em(patsldaformat, 2, vocab, num.e.iterations=10, num.m.iterations=4, alpha=1.0, eta=0.1, annot, params, variance=0.25, logistic=TRUE, lambda=1.0, method="sLDA")
patsldaformat
patsldaformat$vocab
patsSlda <- slda.em(patsldaformat, 2, patsldaformat$vocab, num.e.iterations=10, num.m.iterations=4, alpha=1.0, eta=0.1, annot, params, variance=0.25, logistic=TRUE, lambda=1.0, method="sLDA")
q()
library(tm)
library(topicmodels)
library(lda)
source <- DirSource("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/patsApps")
patappsCorpus <- Corpus(source, readerControl=list(reader=readPlain))
patappsCorpus
finPatAppsCorpus <- tm_map(patappsCorpus, removeWords, stopwords("english"))
dtm <- DocumentTermMatrix(finPatAppsCorpus)
patAppslda <- dtm2ldaformat(dtm, omit_empty=FALSE)
patapps$V1
patappsForh <- read.table("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/pyAnalysisOutput/1kTopicDist4R-recheck.data", s
patAppParams
patappsForh <- read.table("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/pyAnalysisOutput/1kTopicDist4R-recheck.data", sep=",")
patappsForh$V1
source <- DirSource("/home/vsubhashini/courses/dm/ee380l-ghosh-project/data/patents/patsApps")t
patappsCorpus <- Corpus(source, readerControl=list(reader=readPlain))
patappsCorpus
finPatAppsCorpus <- tm_map(patappsCorpus, removeWords, stopwords("english"))
dtm <- DocumentTermMatrix(finPatAppsCorpus)
patAppslda <- dtm2ldaformat(dtm, omit_empty=FALSE)
annotation=patapps$V1
annotation
params
demo(slda)
num.topics
params
params2<- c(-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1)
patapps.slda <- slda.em(patAppslda, 2, patAppslda$vocab, num.e.iterations=10, num.m.iterations=4, alpha=1.0, eta=0.1, annotation, params, variance=0.25, logistic=FALSE, lambda=1.0, method="sLDA")
dim(annotation)
dim(patsAppslda)
dim(patAppslda)
length(patApsslda)
length(patAppslda)
dtm
length(dtm)
finPatAppsCorpus
annotation
length(annotation)
dtm <- DocumentTermMatrix(finPatAppsCorpus)
dtm
patAppslda <- dtm2ldaformat(dtm, omit_empty=FALSE)
length(patAppslda)
patAppslda
patapps.slda <- slda.em(patAppslda, 2, patAppslda$vocab, num.e.iterations=10, num.m.iterations=4, alpha=1.0, eta=0.1, annotation, params, variance=0.25, logistic=TRUE, lambda=1.0, method="sLDA")
q()
